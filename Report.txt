SDMIT Nexus — Technical Paper
First A. Author, Member, IEEE, Second B. Author, Senior Member, IEEE, and Third C. Author
(Affiliation Line 1: Department, SDMIT, Mangalore, India)
(Affiliation Line 2: Email: author@domain.com)
Abstract
SDMIT Nexus is a proposed web-based application developed for the academic community of SDMIT, designed to simplify communication between students and faculty while ensuring secure and verifiable document handling. Unlike informal platforms that lack structure, SDMIT Nexus integrates modern technologies such as facial recognition, liveness detection, and OTP-based verification to enable authentication and digital signing. The system groups students automatically based on semester and branch, provides faculty with tools to distribute documents and track engagement, and introduces an organized forum for academic discussions. The backend, developed using Python and FastAPI, connects with a PostgreSQL database for robust storage, while the frontend relies on React with TypeScript for a responsive user interface. Face recognition modules are implemented using OpenCV and Mediapipe to ensure secure biometric verification. This paper analyzes the problem context, reviews related works, describes the methodology and design followed, and presents system components including the data model, APIs, and security considerations. It concludes with recommendations for future improvements, emphasizing scalability, robustness, and privacy-first handling of biometric data.
I. Introduction
In academic institutions, effective communication and reliable authentication mechanisms are essential for ensuring the smooth flow of information and accountability among students and faculty. Traditional approaches, such as notice boards, group chats, and unstructured emails, often lead to inefficiency, missed information, and a lack of accountability. Informal channels cannot guarantee security, identity verification, or reliable tracking of student interactions. To address these limitations, SDMIT Nexus proposes a structured, secure, and centralized platform.

The system enables students to register using their institutional email, verify their identity via OTP, and be grouped automatically based on their semester. Faculty members can log in with pre-registered credentials to upload notices, study materials, and important documents. To ensure authenticity, SDMIT Nexus integrates facial recognition and liveness detection, allowing students to digitally sign documents in a verifiable manner. Furthermore, the platform records which students have viewed or signed a document, thus providing faculty with real-time engagement tracking. A structured forum for doubt resolution enhances academic interaction by allowing persistent and organized discussions. By combining these features, SDMIT Nexus aims to replace informal communication methods with a reliable and technology-driven solution tailored to institutional requirements.
II. Related Work / Literature Review
Several existing systems attempt to address aspects of academic communication, but none provide a comprehensive solution that combines structured communication with biometric authentication. Learning management systems such as Google Classroom and Moodle are effective in distributing content and managing assignments but lack robust biometric verification mechanisms for digital document signing. Messaging platforms like WhatsApp provide immediacy and familiarity but lack academic focus, structured grouping, and audit trails for official communication.

Biometric verification systems have been explored widely in both academia and industry. Tools like OpenCV and Mediapipe have been used for face detection, facial landmark identification, and gesture tracking. Research on digital signing indicates that integrating facial recognition with liveness detection enhances authenticity and reduces risks of forgery. Benchmarking studies show that systems that incorporate OTP verification and face-based authentication reduce unauthorized access significantly compared to password-only systems. These insights provided the foundation for designing SDMIT Nexus, which aims to integrate the strengths of these systems while addressing their limitations through institution-specific workflows.
III. Methodology & System Design
The SDMIT Nexus project follows the Agile Software Development methodology, which prioritizes iterative development, flexibility, and continuous stakeholder feedback. The choice of Agile ensures that the project can adapt to evolving academic requirements while delivering incremental improvements in each sprint. Instead of waiting until the entire application is completed, functional components are released in smaller stages such as authentication, content distribution, or document signing. This guarantees that user feedback from students and faculty can be integrated immediately into subsequent iterations.

Before implementation, a research and analysis phase was conducted to study existing academic systems and identify gaps. Literature reviews highlighted how current platforms fail to provide secure biometric signing, while technology exploration led to the selection of React and TypeScript for the frontend, FastAPI with Python for the backend, and PostgreSQL for structured data management. For biometric verification, OpenCV and Mediapipe were chosen due to their effectiveness in facial recognition and liveness detection. Benchmarking against Google Classroom and WhatsApp emphasized the need for a platform that combines structured academic workflows with verifiable authentication.

The high-level architecture of the system integrates multiple components. The frontend is a single-page application that manages student sign-up, OTP verification, document viewing, face capture, and forum discussions. The backend provides RESTful APIs for user management, group assignments, document handling, and digital signing. PostgreSQL ensures reliable storage of user details, group structures, documents, and signing records. For facial recognition, the backend integrates with Python modules to extract embeddings and perform liveness detection, ensuring that only valid users can complete signing processes. Redis or similar tools can optionally support caching, notifications, and task queues for scalability.

Finally, DevOps practices are incorporated into the methodology. Containerization using Docker ensures consistent development and deployment environments, while GitHub Actions provide CI/CD pipelines for automated testing and integration. Monitoring tools such as Prometheus and Grafana are planned for system health and performance analysis. By combining Agile principles with modern engineering practices, SDMIT Nexus ensures that the system is scalable, maintainable, and aligned with real academic requirements.
IV. Data Model
The database design of SDMIT Nexus plays a crucial role in maintaining structured academic records, authentication logs, and document metadata. PostgreSQL was chosen due to its robustness, scalability, and support for complex relational structures. The database contains entities such as users, groups, documents, signatures, and forum posts. Students and faculty are represented in the user table, with fields for email, role, and face template references. Groups are created automatically by parsing the institutional email to identify semester and branch, ensuring correct classification of students.

Documents are stored with metadata such as uploader identity, target group, and signing requirements. A separate signature log records the identity of the student, timestamp of signing, liveness status, and face match score. To track accountability further, a document view log records when each student accesses a document. Forum posts are stored with relational links to groups and users, enabling threaded discussions. Special care is taken to encrypt biometric data such as facial embeddings, ensuring compliance with privacy and security requirements.
V. API Design
The application programming interface (API) is the backbone of communication between the frontend and backend. The authentication module supports OTP-based verification for students and password-based login for faculty. Students initiate sign-up by requesting an OTP, which is verified before account creation. JWT tokens are issued to maintain secure sessions. Faculty accounts are created beforehand and validated using credentials.

The document module enables faculty to upload documents and distribute them to relevant groups, while students can access, view, and digitally sign them. The signing process involves facial recognition and liveness detection, after which a verifiable log is created. The forum module supports the creation of academic queries and responses within each group, allowing structured discussions. An analytics module is available for faculty to track student engagement with documents and forums. All APIs follow REST principles and enforce role-based access control to ensure data integrity and security.
VI. Facial Recognition & Liveness Workflow
The biometric component of SDMIT Nexus is central to secure digital signing. During enrollment, students capture multiple facial images through their webcams, which are processed by the backend to generate encrypted embeddings. These embeddings serve as the baseline for future verification. When signing documents, students undergo a randomized liveness challenge that may require actions such as blinking, smiling, or turning their heads. The system records these interactions and verifies them using Mediapipe’s facial landmark detection.

Once liveness is confirmed, the system computes a fresh embedding from the captured image and compares it to the stored baseline. If the match score falls within the acceptable threshold, the system logs the signature as valid. By combining embedding-based recognition with real-time liveness detection, SDMIT Nexus ensures that digital signatures cannot be forged using static images, videos, or other spoofing attempts. This process creates a reliable and auditable record of student acknowledgment for critical academic documents.
VII. Security & Privacy Considerations
Security and privacy are at the core of SDMIT Nexus, particularly because biometric data is highly sensitive. All communications between the client and server are encrypted using TLS to prevent interception. Authentication tokens are short-lived JWTs, with refresh tokens stored securely in cookies. OTP verification requests are rate-limited to prevent abuse, and failed login attempts are monitored.

At the storage level, all biometric embeddings are encrypted using AES-256-GCM, and encryption keys are managed through secure vaults or key management systems. Documents and signatures are also stored securely, with faculty having controlled access. Role-based access control ensures that students cannot view unauthorized documents and that faculty actions are restricted to their domain. Logs of signing events, including timestamps, IP addresses, and match scores, are maintained for auditing. To comply with privacy requirements, users are provided with the right to request deletion of their biometric data.
VIII. Testing & Validation
Testing is integral to the development of SDMIT Nexus. Unit tests are designed to validate OTP flows, email parsing for group assignments, and database operations. Integration tests validate entire workflows, such as user registration, face enrollment, and document signing. End-to-end testing with tools such as Cypress or Playwright ensures that the frontend and backend work seamlessly together in real-world scenarios.

Security testing involves penetration testing of authentication modules and attempts to spoof the facial recognition system with photos or videos. Performance testing evaluates the response time of embedding computations and scalability of the PostgreSQL database under load. Continuous testing pipelines integrated into GitHub Actions ensure that every new change is validated automatically, reducing the likelihood of regression and ensuring long-term stability.
IX. Deployment & DevOps
The deployment process for SDMIT Nexus is designed to be scalable and maintainable. Containerization with Docker allows consistent environments across development, testing, and production. Docker Compose is used for local development, integrating services such as backend, frontend, PostgreSQL, and Redis. In production, the system can be deployed on container orchestration platforms such as Kubernetes or Docker Swarm.

Continuous integration and deployment pipelines are configured using GitHub Actions, automating builds, testing, and deployments. For production, managed services such as PostgreSQL databases and S3-compatible storage are recommended to reduce administrative overhead. Secrets such as encryption keys and API credentials are stored in secure key management systems. Monitoring with Prometheus and Grafana ensures that the system’s performance and health are continuously tracked.
X. Recommendations & Future Work
While SDMIT Nexus provides a strong foundation, several enhancements can be made to strengthen its robustness and user experience. One recommendation is to further harden biometric privacy by integrating advanced encryption mechanisms and conducting periodic key rotations. Another improvement involves scaling face recognition tasks using worker queues to handle heavy computational loads during peak times.

In terms of security, integrating advanced spoof detection mechanisms powered by deep learning could further reduce risks of facial forgery. From a usability perspective, developing analytics dashboards will help faculty monitor engagement more effectively. Introducing fallback authentication methods, such as supervised manual signing, ensures inclusivity for students unable to access facial recognition. Future updates should also include richer documentation, providing clear setup guides for developers and end-users.
XI. Conclusion
SDMIT Nexus addresses the limitations of informal communication tools in academic institutions by introducing a structured, secure, and scalable platform. With OTP-based email verification, automatic student grouping, and biometric digital signing, the system ensures reliability, accountability, and authenticity. The integration of facial recognition with liveness detection provides tamper-proof verification, while the forum and notification systems enhance academic interaction.

By combining modern technologies such as React, FastAPI, PostgreSQL, and OpenCV, SDMIT Nexus creates an end-to-end solution that bridges communication gaps and strengthens academic workflows. With further refinements in biometric privacy, scalability, and analytics, the platform has the potential to serve as a model for secure academic communication systems.

